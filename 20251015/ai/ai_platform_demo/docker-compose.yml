version: "3.9"

x-env: &env
  TZ: UTC

networks:
  core:
  camunda:

services:
  postgres:
    image: postgis/postgis:16-3.4
    container_name: postgres
    environment:
      <<: *env
      POSTGRES_USER: ${POSTGRES_USER:-ai}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ai}
      POSTGRES_DB: ${POSTGRES_DB:-ai_platform}
    ports: ["5432:5432"]
    volumes:
      - /Volumes/Seagate/WellsFargo/LowCodeAgent/20251015/ai_platform_data/postgres:/var/lib/postgresql/data
    networks: [core]

  redis:
    image: redis:7.2
    container_name: redis
    command: ["redis-server", "--save", "", "--appendonly", "no"]
    ports: ["6379:6379"]
    volumes:
      - /Volumes/Seagate/WellsFargo/LowCodeAgent/20251015/ai_platform_data/redis:/data
    networks: [core]

  arangodb:
    image: arangodb:3.11
    container_name: arangodb
    environment:
      <<: *env
      ARANGO_ROOT_PASSWORD: ${ARANGO_ROOT_PASSWORD:-rootpwd}
    ports: ["8529:8529"]
    volumes:
      - /Volumes/Seagate/WellsFargo/LowCodeAgent/20251015/ai_platform_data/arangodb:/var/lib/arangodb3
    networks: [core]

  chroma:
    image: chromadb/chroma:latest
    container_name: chroma
    environment:
      IS_PERSISTENT: "TRUE"
      PERSIST_DIRECTORY: /chroma-data
    ports: ["8000:8000"]
    volumes:
      - /Volumes/Seagate/WellsFargo/LowCodeAgent/20251015/ai_platform_data/chroma:/chroma-data
    networks: [core]

  meilisearch:
    image: getmeili/meilisearch:v1.8
    container_name: meilisearch
    environment:
      MEILI_NO_ANALYTICS: "true"
    ports: ["7700:7700"]
    volumes:
      - /Volumes/Seagate/WellsFargo/LowCodeAgent/20251015/ai_platform_data/meili:/meili_data
    networks: [core]

  zookeeper:
    image: bitnami/zookeeper:3.9
    container_name: zookeeper
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    ports: ["2181:2181"]
    volumes:
      - /Volumes/Seagate/WellsFargo/LowCodeAgent/20251015/ai_platform_data/zookeeper:/bitnami/zookeeper
    networks: [core]

  kafka:
    image: bitnami/kafka:3.7
    container_name: kafka
    environment:
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "0@kafka:9093"
      KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_HEAP_OPTS: "-Xms256m -Xmx512m"
    depends_on: [zookeeper]
    ports: ["9092:9092"]
    volumes:
      - /Volumes/Seagate/WellsFargo/LowCodeAgent/20251015/ai_platform_data/kafka:/bitnami/kafka
    networks: [core]

  langfuse:
    image: ghcr.io/langfuse/langfuse:latest
    container_name: langfuse
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-ai}:${POSTGRES_PASSWORD:-ai}@postgres:5432/${POSTGRES_DB:-ai_platform}
      NEXTAUTH_URL: ${LANGFUSE_NEXTAUTH_URL:-http://localhost:3000}
      NEXTAUTH_SECRET: ${LANGFUSE_NEXTAUTH_SECRET:-devsecret}
      SALT: ${LANGFUSE_SALT:-langsalt}
      ENCRYPTION_KEY: ${LANGFUSE_ENCRYPTION_KEY:-00000000000000000000000000000000}
      TELEMETRY: "false"
      LANGFUSE_PUBLIC_KEY: ${LANGFUSE_PUBLIC_KEY:-public_dev}
      LANGFUSE_SECRET_KEY: ${LANGFUSE_SECRET_KEY:-secret_dev}
    ports: ["3000:3000"]
    depends_on:
      - postgres
    networks: [core]

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: ai-server
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DB_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB:-ai_platform}
      DB_USER: ${POSTGRES_USER:-ai}
      DB_PASS: ${POSTGRES_PASSWORD:-ai}
      REDIS_URL: redis://redis:6379
      KAFKA_BOOTSTRAP: kafka:9092
      ARANGO_URL: http://arangodb:8529
      ARANGO_USER: root
      ARANGO_PASS: ${ARANGO_ROOT_PASSWORD:-rootpwd}
      CHROMA_URL: http://chroma:8000
      MEILI_URL: http://meilisearch:7700
      LANGFUSE_BASEURL: http://langfuse:3000
      LANGFUSE_PUBLIC_KEY: ${LANGFUSE_PUBLIC_KEY:-public_dev}
      LANGFUSE_SECRET_KEY: ${LANGFUSE_SECRET_KEY:-secret_dev}
    ports: ["8080:8080"]
    depends_on:
      - postgres
      - redis
      - kafka
      - arangodb
      - chroma
      - meilisearch
      - langfuse
    networks: [core]

  ollama:
    profiles: ["llm"]
    image: ollama/ollama:latest
    container_name: ollama
    restart: unless-stopped
    volumes:
      - /Volumes/Seagate/WellsFargo/LowCodeAgent/20251015/ai_platform_data/ollama:/root/.ollama
    ports: ["11434:11434"]
    networks: [core]

  elasticsearch:
    profiles: ["camunda"]
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    container_name: camunda-es
    environment:
      discovery.type: single-node
      xpack.security.enabled: "false"
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    volumes:
      - /Volumes/Seagate/WellsFargo/LowCodeAgent/20251015/ai_platform_data/camunda/es:/usr/share/elasticsearch/data
    networks: [camunda]

  keycloak:
    profiles: ["camunda"]
    image: quay.io/keycloak/keycloak:24.0.5
    container_name: keycloak
    command: ["start-dev","--http-port=8080"]
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports: ["8090:8080"]
    volumes:
      - /Volumes/Seagate/WellsFargo/LowCodeAgent/20251015/ai_platform_data/keycloak:/opt/keycloak/data
    networks: [camunda]
